name: Build and Deploy 

on: 
  push:
    branches: 
      - dev
      - qas

env:
  GH_REPO   : Bineo2/data-functions
  DKR_IMAGE : data-functions-wap
  DKR_TAG   : '1.0.23'
   
    
jobs :
  init :
    runs-on : ubuntu-latest
    outputs : 
      env-branch : ${{steps.set-variables.outputs.env-branch}}
      reg-user   : ${{steps.set-variables.outputs.reg-user}}
      app-name   : ${{steps.set-variables.outputs.app-name}}

    steps : 
      - name : Set Variables
        id   : set-variables
        run  : |
          case ${GITHUB_BASE_REF##*/} in
            "dev") 
              echo "::set-output name=env-branch::dev"
              echo "::set-output name=reg-user::datalakeepiccontainerregistry"
              echo "::set-output name=app-name::wap-validation-services-dev"
              ;;
            "qas")
              echo "::set-output name=env-branch::qas"
              echo "::set-output name=reg-user::acrCrossChannelDataQas"
              echo "::set-output name=app-name::as-validationServices-data-qas"
              ;;
            "stg")
              echo "::set-output name=env-branch::stg"
              echo "::set-output name=reg-user::acrCrossChannelDataQas"
              echo "::set-output name=app-name::as-validationServices-data-stg"
              ;;
          esac 
  
  build-and-deploy :
    runs-on     : ubuntu-latest
    needs       : init
    environment : ${{needs.init.outputs.env-brach}} 
    
    steps :
    - name : Checkout GitHub Actions
      uses : actions/checkout@main
      with :
        repository : ${{env.GH_REPO}}
        ref        : ${{needs.init.outputs.env-branch}}
     
    - name : Build and push to registry 
      id   : container-registry
      uses : mr-smithers-excellent/docker-build-push@v5.5
      with : 
        dockerfile : dockerfile.ci
        image      : ${{env.DKR_IMAGE}}
        tags       : ${{env.DKR_TAG}}
        username   : ${{needs.init.outputs.reg-user}}
        password   : ${{secrets.ACR_PASS}}
        registry  : '${{needs.init.outputs.reg-user}}.azurecr.io'
        buildArgs : 'SERVER_TYPE=wap,ENV_TYPE=${{needs.init.outputs.environment}}'  
        
    - name : Deploy to App Service
      uses : azure/webapps-deploy@v2
      with :
        app-name        : ${{needs.init.outputs.app-name}}
        images          : ${{needs.init.outputs.reg-user}}/${{env.DKR_IMAGE}}:${{env.DKR_TAG}}
        publish-profile : ${{secrets.WAP_PUBLISH}}
       